2021-07-06T21:19:45.952438 info - initialized!
2021-07-06T21:19:45.965404 info - Open workspace paths: [d:\_dev\hetu-script\script]
2021-07-06T21:19:45.980363 info - Client capibilities: {
    "workspace": {
        "applyEdit": true,
        "workspaceEdit": {
            "documentChanges": true,
            "resourceOperations": [
                "create",
                "rename",
                "delete"
            ],
            "failureHandling": "textOnlyTransactional",
            "normalizesLineEndings": true,
            "changeAnnotationSupport": {
                "groupsOnLabel": true
            }
        },
        "didChangeConfiguration": {
            "dynamicRegistration": true
        },
        "didChangeWatchedFiles": {
            "dynamicRegistration": true
        },
        "symbol": {
            "dynamicRegistration": true,
            "symbolKind": {
                "valueSet": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26
                ]
            },
            "tagSupport": {
                "valueSet": [
                    1
                ]
            }
        },
        "executeCommand": {
            "dynamicRegistration": true
        },
        "workspaceFolders": true,
        "configuration": true,
        "semanticTokens": {
            "refreshSupport": true
        },
        "codeLens": {
            "refreshSupport": true
        },
        "fileOperations": {
            "dynamicRegistration": true,
            "didCreate": true,
            "willCreate": true,
            "didRename": true,
            "willRename": true,
            "didDelete": true,
            "willDelete": true
        }
    },
    "textDocument": {
        "synchronization": {
            "dynamicRegistration": true,
            "willSave": true,
            "willSaveWaitUntil": true,
            "didSave": true
        },
        "completion": {
            "dynamicRegistration": true,
            "completionItem": {
                "snippetSupport": true,
                "commitCharactersSupport": true,
                "documentationFormat": [
                    "markdown",
                    "plaintext"
                ],
                "deprecatedSupport": true,
                "preselectSupport": true,
                "tagSupport": {
                    "valueSet": [
                        1
                    ]
                },
                "insertReplaceSupport": true,
                "resolveSupport": {
                    "properties": [
                        "documentation",
                        "detail",
                        "additionalTextEdits"
                    ]
                },
                "insertTextModeSupport": {
                    "valueSet": [
                        1,
                        2
                    ]
                }
            },
            "completionItemKind": {
                "valueSet": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25
                ]
            },
            "contextSupport": true
        },
        "hover": {
            "dynamicRegistration": true,
            "contentFormat": [
                "markdown",
                "plaintext"
            ]
        },
        "signatureHelp": {
            "dynamicRegistration": true,
            "signatureInformation": {
                "documentationFormat": [
                    "markdown",
                    "plaintext"
                ],
                "parameterInformation": {
                    "labelOffsetSupport": true
                },
                "activeParameterSupport": true
            },
            "contextSupport": true
        },
        "declaration": {
            "dynamicRegistration": true,
            "linkSupport": true
        },
        "definition": {
            "dynamicRegistration": true,
            "linkSupport": true
        },
        "typeDefinition": {
            "dynamicRegistration": true,
            "linkSupport": true
        },
        "implementation": {
            "dynamicRegistration": true,
            "linkSupport": true
        },
        "references": {
            "dynamicRegistration": true
        },
        "documentHighlight": {
            "dynamicRegistration": true
        },
        "documentSymbol": {
            "dynamicRegistration": true,
            "symbolKind": {
                "valueSet": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26
                ]
            },
            "hierarchicalDocumentSymbolSupport": true,
            "tagSupport": {
                "valueSet": [
                    1
                ]
            },
            "labelSupport": true
        },
        "codeAction": {
            "dynamicRegistration": true,
            "codeActionLiteralSupport": {
                "codeActionKind": {
                    "valueSet": [
                        "",
                        "quickfix",
                        "refactor",
                        "refactor.extract",
                        "refactor.inline",
                        "refactor.rewrite",
                        "source",
                        "source.organizeImports"
                    ]
                }
            },
            "isPreferredSupport": true,
            "disabledSupport": true,
            "dataSupport": true,
            "resolveSupport": {
                "properties": [
                    "edit"
                ]
            },
            "honorsChangeAnnotations": false
        },
        "codeLens": {
            "dynamicRegistration": true
        },
        "documentLink": {
            "dynamicRegistration": true,
            "tooltipSupport": true
        },
        "colorProvider": {
            "dynamicRegistration": true
        },
        "formatting": {
            "dynamicRegistration": true
        },
        "rangeFormatting": {
            "dynamicRegistration": true
        },
        "onTypeFormatting": {
            "dynamicRegistration": true
        },
        "rename": {
            "dynamicRegistration": true,
            "prepareSupport": true,
            "prepareSupportDefaultBehavior": 1,
            "honorsChangeAnnotations": true
        },
        "publishDiagnostics": {
            "relatedInformation": true,
            "tagSupport": {
                "valueSet": [
                    1,
                    2
                ]
            },
            "versionSupport": false,
            "codeDescriptionSupport": true,
            "dataSupport": true
        },
        "foldingRange": {
            "dynamicRegistration": true,
            "rangeLimit": 5000,
            "lineFoldingOnly": true
        },
        "selectionRange": {
            "dynamicRegistration": true
        },
        "linkedEditingRange": {
            "dynamicRegistration": true
        },
        "callHierarchy": {
            "dynamicRegistration": true
        },
        "semanticTokens": {
            "dynamicRegistration": true,
            "requests": {
                "range": true,
                "full": {
                    "delta": true
                }
            },
            "tokenTypes": [
                "namespace",
                "type",
                "class",
                "enum",
                "interface",
                "struct",
                "typeParameter",
                "parameter",
                "variable",
                "property",
                "enumMember",
                "event",
                "function",
                "method",
                "macro",
                "keyword",
                "modifier",
                "comment",
                "string",
                "number",
                "regexp",
                "operator"
            ],
            "tokenModifiers": [
                "declaration",
                "definition",
                "readonly",
                "static",
                "deprecated",
                "abstract",
                "async",
                "modification",
                "documentation",
                "defaultLibrary"
            ],
            "formats": [
                "relative"
            ],
            "overlappingTokenSupport": false,
            "multilineTokenSupport": false
        }
    },
    "window": {
        "workDoneProgress": true,
        "showMessage": {
            "messageActionItem": {
                "additionalPropertiesSupport": true
            }
        },
        "showDocument": {
            "support": true
        }
    },
    "general": {
        "regularExpressions": {
            "engine": "ECMAScript",
            "version": "ES2020"
        },
        "markdown": {
            "parser": "marked",
            "version": "1.1.0"
        }
    }
}
2021-07-06T21:19:45.984353 info - Client initialization option: {}
2021-07-06T21:19:45.991334 info - computeServerCapabilities: Instance of 'LspClientCapabilities'
2021-07-06T21:19:46.017555 info - received client message: {
    "method": "initialized",
    "params": {},
    "jsonrpc": "2.0"
}
2021-07-06T21:19:46.021559 info - send request: workspace/configuration, {
    "items": [
        {
            "section": "hetu"
        }
    ]
}
2021-07-06T21:19:46.032377 info - received client message: {
    "id": 1,
    "jsonrpc": "2.0",
    "result": [
        null
    ]
}
2021-07-06T21:19:46.049331 info - additionalRegistrations is not empty: [{
    "id": "0",
    "method": "textDocument/didOpen",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "1",
    "method": "textDocument/didClose",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "2",
    "method": "textDocument/didChange",
    "registerOptions": {
        "syncKind": 2,
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "3",
    "method": "textDocument/completion",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ],
        "triggerCharacters": [
            ".",
            "=",
            "(",
            "$"
        ],
        "resolveProvider": true
    }
}, {
    "id": "4",
    "method": "textDocument/hover",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "5",
    "method": "textDocument/signatureHelp",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ],
        "triggerCharacters": [
            "("
        ],
        "retriggerCharacters": [
            ","
        ]
    }
}, {
    "id": "6",
    "method": "textDocument/references",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "7",
    "method": "textDocument/documentHighlight",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "8",
    "method": "textDocument/documentSymbol",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "9",
    "method": "textDocument/formatting",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "10",
    "method": "textDocument/onTypeFormatting",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ],
        "firstTriggerCharacter": "}",
        "moreTriggerCharacter": [
            ";"
        ]
    }
}, {
    "id": "11",
    "method": "textDocument/rangeFormatting",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "12",
    "method": "textDocument/definition",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "13",
    "method": "textDocument/implementation",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "14",
    "method": "textDocument/codeAction",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ],
        "codeActionKinds": [
            "source",
            "source.organizeImports",
            "source.sortMembers",
            "quickfix",
            "refactor"
        ]
    }
}, {
    "id": "15",
    "method": "textDocument/rename",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ],
        "prepareProvider": true
    }
}, {
    "id": "16",
    "method": "textDocument/foldingRange",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ]
    }
}, {
    "id": "17",
    "method": "workspace/willRenameFiles",
    "registerOptions": {
        "filters": [
            {
                "scheme": "file",
                "pattern": {
                    "glob": "**/*.hetu",
                    "matches": "file"
                }
            }
        ]
    }
}, {
    "id": "18",
    "method": "workspace/didChangeConfiguration"
}, {
    "id": "19",
    "method": "textDocument/semanticTokens",
    "registerOptions": {
        "documentSelector": [
            {
                "language": "hetu",
                "scheme": "file"
            }
        ],
        "legend": {
            "tokenTypes": [
                "annotation",
                "keyword",
                "class",
                "comment",
                "variable",
                "parameter",
                "enum",
                "enumMember",
                "type",
                "property",
                "method",
                "namespace",
                "boolean",
                "number",
                "string",
                "function",
                "typeParameter"
            ],
            "tokenModifiers": [
                "documentation",
                "declaration",
                "static",
                "control",
                "label"
            ]
        },
        "range": true,
        "full": {
            "delta": false
        }
    }
}]
2021-07-06T21:19:46.051355 info - send request: client/registerCapability, {
    "registrations": [
        {
            "id": "0",
            "method": "textDocument/didOpen",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "1",
            "method": "textDocument/didClose",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "2",
            "method": "textDocument/didChange",
            "registerOptions": {
                "syncKind": 2,
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "3",
            "method": "textDocument/completion",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ],
                "triggerCharacters": [
                    ".",
                    "=",
                    "(",
                    "$"
                ],
                "resolveProvider": true
            }
        },
        {
            "id": "4",
            "method": "textDocument/hover",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "5",
            "method": "textDocument/signatureHelp",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ],
                "triggerCharacters": [
                    "("
                ],
                "retriggerCharacters": [
                    ","
                ]
            }
        },
        {
            "id": "6",
            "method": "textDocument/references",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "7",
            "method": "textDocument/documentHighlight",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "8",
            "method": "textDocument/documentSymbol",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "9",
            "method": "textDocument/formatting",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "10",
            "method": "textDocument/onTypeFormatting",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ],
                "firstTriggerCharacter": "}",
                "moreTriggerCharacter": [
                    ";"
                ]
            }
        },
        {
            "id": "11",
            "method": "textDocument/rangeFormatting",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "12",
            "method": "textDocument/definition",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "13",
            "method": "textDocument/implementation",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "14",
            "method": "textDocument/codeAction",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ],
                "codeActionKinds": [
                    "source",
                    "source.organizeImports",
                    "source.sortMembers",
                    "quickfix",
                    "refactor"
                ]
            }
        },
        {
            "id": "15",
            "method": "textDocument/rename",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ],
                "prepareProvider": true
            }
        },
        {
            "id": "16",
            "method": "textDocument/foldingRange",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ]
            }
        },
        {
            "id": "17",
            "method": "workspace/willRenameFiles",
            "registerOptions": {
                "filters": [
                    {
                        "scheme": "file",
                        "pattern": {
                            "glob": "**/*.hetu",
                            "matches": "file"
                        }
                    }
                ]
            }
        },
        {
            "id": "18",
            "method": "workspace/didChangeConfiguration"
        },
        {
            "id": "19",
            "method": "textDocument/semanticTokens",
            "registerOptions": {
                "documentSelector": [
                    {
                        "language": "hetu",
                        "scheme": "file"
                    }
                ],
                "legend": {
                    "tokenTypes": [
                        "annotation",
                        "keyword",
                        "class",
                        "comment",
                        "variable",
                        "parameter",
                        "enum",
                        "enumMember",
                        "type",
                        "property",
                        "method",
                        "namespace",
                        "boolean",
                        "number",
                        "string",
                        "function",
                        "typeParameter"
                    ],
                    "tokenModifiers": [
                        "documentation",
                        "declaration",
                        "static",
                        "control",
                        "label"
                    ]
                },
                "range": true,
                "full": {
                    "delta": false
                }
            }
        }
    ]
}
2021-07-06T21:19:46.065500 info - received client message: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
2021-07-06T21:19:46.066469 info - dynamic registrationResponse: {
    "id": 2,
    "jsonrpc": "2.0",
    "result": null
}
2021-07-06T21:19:46.081428 info - Server capibilities: {
    "executeCommandProvider": {
        "commands": [
            "edit.sortMembers",
            "edit.organizeImports",
            "edit.sendWorkspaceEdit",
            "refactor.perform"
        ],
        "workDoneProgress": true
    },
    "workspaceSymbolProvider": true,
    "workspace": {
        "workspaceFolders": {
            "supported": true,
            "changeNotifications": true
        }
    }
}
2021-07-06T21:20:33.211559 info - received client message: {
    "method": "textDocument/didOpen",
    "params": {
        "textDocument": {
            "uri": "file:///d%3A/_dev/hetu-script/script/battle.ht",
            "languageId": "hetu",
            "version": 1,
            "text": "\r\nvar next_char_name: str\r\n\r\nclass char_info {\r\n  var name: str\r\n  var strength: num\r\n  var vitality: num\r\n  var initiative: num\r\n  var ko = false\r\n}\r\n\r\nvar player = char_info()\r\nvar enemy = char_info()\r\n\r\nvar charList = [player, enemy]\r\n\r\nfun main {\r\n  player.strength = 76\r\n  player.vitality = 76 * 1.2\r\n  player.name = 'player'\r\n  enemy.strength = 130\r\n  enemy.vitality = 130 * 1.2\r\n  enemy.name = 'enemy'\r\n\r\n  start(92, 103)\r\n}\r\n\r\nfun start(player_dex: num, enemy_dex: num) {\r\n  print('战斗开始！')\r\n\r\n  player.initiative = 1000 / sqrt(player_dex) - 20\r\n  enemy.initiative = 1000 / sqrt(enemy_dex)\r\n\r\n  while ((player.vitality > 0) && (enemy.vitality > 0)) {\r\n    if (player.initiative >= enemy.initiative) {\r\n      next_char_name = enemy.name\r\n    } else {\r\n      next_char_name = player.name\r\n    }\r\n\r\n    for (var char in charList) {\r\n      print(\r\n          '角色：' + char.name + '，生命：' + char.vitality.toStringAsFixed(2) + '，先机：' + char.initiative.toStringAsFixed(2))\r\n    }\r\n\r\n    if (next_char_name == 'player') {\r\n      while (true) {\r\n        var input = Console.getln('输入指令(attack\\ultimate)>')\r\n        if (input == 'attack') {\r\n          player.initiative = player.initiative + 10\r\n          enemy.vitality = enemy.vitality - 15\r\n          print('你进行了攻击！')\r\n          print('敌人生命减少15，现在为：' + enemy.vitality.toStringAsFixed(2))\r\n          break\r\n        } else if (input == 'ultimate') {\r\n          player.initiative = player.initiative + 100\r\n          enemy.vitality = enemy.vitality - 100\r\n          print('你释放了大招！')\r\n          print('敌人生命减少100，现在为：' + enemy.vitality.toStringAsFixed(2))\r\n          break\r\n        } else {\r\n          print('无效的指令。')\r\n        }\r\n      }\r\n    } else {\r\n      enemy.initiative = enemy.initiative + 10\r\n      player.vitality = player.vitality - 20\r\n      print('你受到了攻击！')\r\n      print('你的生命减少20，现在为：' + player.vitality.toStringAsFixed(2))\r\n    }\r\n\r\n    Console.getln('按回车继续...')\r\n    Console.eraseLine()\r\n\r\n    for (var char in charList) {\r\n      if (char.vitality <= 0) {\r\n        char.ko = true\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  print('战斗结束！')\r\n  if (player.vitality <= 0) {\r\n    print('你输了！')\r\n  } else {\r\n    print('你赢了！')\r\n  }\r\n}\r\n"
        }
    },
    "jsonrpc": "2.0"
}
2021-07-06T21:20:33.219538 info - received client message: {
    "id": 1,
    "method": "textDocument/documentSymbol",
    "params": {
        "textDocument": {
            "uri": "file:///d%3A/_dev/hetu-script/script/battle.ht"
        }
    },
    "jsonrpc": "2.0"
}
2021-07-06T21:20:33.221533 info - received client message: {
    "id": 2,
    "method": "textDocument/semanticTokens/full",
    "params": {
        "textDocument": {
            "uri": "file:///d%3A/_dev/hetu-script/script/battle.ht"
        }
    },
    "jsonrpc": "2.0"
}
2021-07-06T21:20:33.318274 info - received client message: {
    "id": 3,
    "method": "textDocument/semanticTokens/range",
    "params": {
        "textDocument": {
            "uri": "file:///d%3A/_dev/hetu-script/script/battle.ht"
        },
        "range": {
            "start": {
                "line": 0,
                "character": 0
            },
            "end": {
                "line": 68,
                "character": 65
            }
        }
    },
    "jsonrpc": "2.0"
}
2021-07-06T21:20:33.452915 info - received client message: {
    "id": 4,
    "method": "textDocument/foldingRange",
    "params": {
        "textDocument": {
            "uri": "file:///d%3A/_dev/hetu-script/script/battle.ht"
        }
    },
    "jsonrpc": "2.0"
}
2021-07-06T21:20:33.453911 info - received client message: {
    "id": 5,
    "method": "textDocument/semanticTokens/range",
    "params": {
        "textDocument": {
            "uri": "file:///d%3A/_dev/hetu-script/script/battle.ht"
        },
        "range": {
            "start": {
                "line": 0,
                "character": 0
            },
            "end": {
                "line": 38,
                "character": 5
            }
        }
    },
    "jsonrpc": "2.0"
}
2021-07-06T21:20:36.786830 info - received client message: {
    "id": 6,
    "method": "textDocument/documentSymbol",
    "params": {
        "textDocument": {
            "uri": "file:///d%3A/_dev/hetu-script/script/battle.ht"
        }
    },
    "jsonrpc": "2.0"
}
2021-07-06T21:20:36.787817 info - received client message: {
    "method": "textDocument/didClose",
    "params": {
        "textDocument": {
            "uri": "file:///d%3A/_dev/hetu-script/script/battle.ht"
        }
    },
    "jsonrpc": "2.0"
}
2021-07-06T21:20:36.793803 info - document closed [d:\_dev\hetu-script\script\battle.ht]
2021-07-06T21:20:36.796796 info - received client message: {
    "method": "$/cancelRequest",
    "params": {
        "id": 6
    },
    "jsonrpc": "2.0"
}
