import{o as e,c as t,a}from"./app.c9011ed2.js";const s='{"title":"Type system","description":"","frontmatter":{},"headers":[{"level":2,"title":"Type expression","slug":"type-expression"},{"level":2,"title":"Type alias declaration","slug":"type-alias-declaration"},{"level":2,"title":"Function type","slug":"function-type"},{"level":2,"title":"Struct type","slug":"struct-type"}],"relativePath":"en-US/static_check/index.md","lastUpdated":1625741066013}',r={},i=a('<h1 id="type-system"><a class="header-anchor" href="#type-system" aria-hidden="true">#</a> Type system</h1><p>Hetu script have a build-in static type system, however it is optional to the user.</p><h2 id="type-expression"><a class="header-anchor" href="#type-expression" aria-hidden="true">#</a> Type expression</h2><p>Currently type expression is not fully supported, you can pass a class name to a variable, but you cannot pass a function type.</p><h2 id="type-alias-declaration"><a class="header-anchor" href="#type-alias-declaration" aria-hidden="true">#</a> Type alias declaration</h2><h2 id="function-type"><a class="header-anchor" href="#function-type" aria-hidden="true">#</a> Function type</h2><h2 id="struct-type"><a class="header-anchor" href="#struct-type" aria-hidden="true">#</a> Struct type</h2>',7);r.render=function(a,s,r,n,p,l){return e(),t("div",null,[i])};export default r;export{s as __pageData};
