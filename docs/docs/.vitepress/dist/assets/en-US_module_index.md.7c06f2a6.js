import{o as e,c as t,a}from"./app.c9011ed2.js";const i='{"title":"Module","description":"","frontmatter":{},"headers":[{"level":2,"title":"Module","slug":"module-2"},{"level":3,"title":"Source type","slug":"source-type"},{"level":2,"title":"Library","slug":"library"},{"level":2,"title":"Context","slug":"context"}],"relativePath":"en-US/module/index.md","lastUpdated":1628589406165}',r={},o=a('<h1 id="module"><a class="header-anchor" href="#module" aria-hidden="true">#</a> Module</h1><p>Hetu script codes are a batch of [HTSource] files organized in the form of [HTModule] and [HTLibrary]. If a module contains import statement, the parser will try to fetch another module content by the import path through a [HTContext].</p><h2 id="module-2"><a class="header-anchor" href="#module-2" aria-hidden="true">#</a> Module</h2><p>A module is a single string content. It could be a runtime string literal from dart side. Or it could be a plain text file on your physical disk.</p><h3 id="source-type"><a class="header-anchor" href="#source-type" aria-hidden="true">#</a> Source type</h3><p>Hetu script file have two different way to interpret, controlled by a source [type] parameter in the eval method of the Interpreter class.</p><ul><li><p>[SourceType.module]: the script file contains only import statement and declarations(variable, function and class). Interpreter can invoke a function immediately after evaluation, the name of the invoked function is given by parameter [invokeFunc], which is commonly &#39;main&#39;. This is like most app structure in C++, Java and Dart.</p></li><li><p>[SourceType.script]: the script file contains all kinds of expression and control statement that is allowed in a anonymous function body (including nested function and class declaration). Everything is immediately evaluated. This is like the usage of most script languages like Javascript, Python and Lua.</p></li></ul><h2 id="library"><a class="header-anchor" href="#library" aria-hidden="true">#</a> Library</h2><h2 id="context"><a class="header-anchor" href="#context" aria-hidden="true">#</a> Context</h2>',9);r.render=function(a,i,r,n,l,s){return e(),t("div",null,[o])};export default r;export{i as __pageData};
