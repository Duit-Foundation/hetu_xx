class Value {

  // external关键字表示函数体在host语言中定义
	external fun toString(): String

}

class Number extends Value {

	external static fun parse(value): Number

  external fun toStringAsFixed([fractionDigits: Number = 0]): Number

  external fun truncate(): Number
}

class Boolean extends Value {

	static fun parse(value): Boolean {
    if (value is Boolean) {
      return value
    } else if (value is Number) {
      if (value != 0) {
        return true
      } else {
        return false
      }
    } else if (value is String) {
      return value.isNotEmpty
    } else {
      if (value != null) {
        return true
      } else {
        return false
      }
    }
  }
}

class String extends Value {
	
	external get isEmpty: Boolean
	
	get isNotEmpty: Boolean {
		return !isEmpty
	}

	external fun substring(startIndex: Number, [endIndex: Number]): String

	external static fun parse(value): String
}

class List extends Value {
	
	external get length: Number
	
	get isEmpty: Boolean {
		return length == 0
	}
	
	get isNotEmpty: Boolean {
		return length != 0
	}
	
	get first: any {
    if (length > 0){
      return elementAt(0)
    }
	}
	
	get last: any {
    if (length > 0){
      return elementAt(length - 1)
    }
  }
	
	fun contains(value): Boolean {
		return indexOf(value) != -1
	}
	
	external fun add(... args)
	
	external fun clear()
	
	external fun removeAt(index: Number)
	
	external fun indexOf(value): Number
	
	external fun elementAt(index: Number): any
}

class Map extends Value {
	
	external get length: Number
	
	get isEmpty: Boolean {
		return length == 0
	}
	
	get isNotEmpty: Boolean {
		return length != 0
	}

  external get keys: List

  external get values: List
	
	external fun containsKey(value): Boolean

	external fun containsValue(value): Boolean
	
	external fun setVal(key, value)
	
	external fun addAll(other: Map)
	
	external fun clear()
	
	external fun remove(key)
	
	external fun getVal(key): any

  external fun putIfAbsent(key, value): any
}