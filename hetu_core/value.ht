class _Value {

  // external关键字表示函数体在host语言中定义
	external fun toString(): String

}

class num extends _Value {

	external static fun parse(value): num

  external fun toStringAsFixed([fractionDigits: num = 0]): num

  external fun truncate(): num
}

class bool extends _Value {

	static fun parse(value): bool {
    if (value is bool) {
      return value
    } else if (value is num) {
      if (value != 0) {
        return true
      } else {
        return false
      }
    } else if (value is String) {
      return value.isNotEmpty
    } else {
      if (value != null) {
        return true
      } else {
        return false
      }
    }
  }
}

class String extends _Value {
	
	external get isEmpty: bool
	
	get isNotEmpty: bool {
		return !isEmpty
	}

	external fun substring(startIndex: num, [endIndex: num]): String

	external static fun parse(value): String
}

class List extends _Value {
	
	external get length: num
	
	get isEmpty: bool {
		return length == 0
	}
	
	get isNotEmpty: bool {
		return length != 0
	}
	
	get first: any {
    if (length > 0){
      return elementAt(0)
    }
	}
	
	get last: any {
    if (length > 0){
      return elementAt(length - 1)
    }
  }
	
	fun contains(value): bool {
		return indexOf(value) != -1
	}
	
	external fun add(... args)
	
	external fun clear()
	
	external fun removeAt(index: num)
	
	external fun indexOf(value): num
	
	external fun elementAt(index: num): any
}

class Map extends _Value {
	
	external get length: num
	
	get isEmpty: bool {
		return length == 0
	}
	
	get isNotEmpty: bool {
		return length != 0
	}

  external get keys: List

  external get values: List
	
	external fun containsKey(value): bool

	external fun containsValue(value): bool
	
	external fun setVal(key, value)
	
	external fun addAll(other: Map)
	
	external fun clear()
	
	external fun remove(key)
	
	external fun getVal(key): any

  external fun putIfAbsent(key, value): any
}